"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mball",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.utils","smoothScroll"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("users"),function(){angular.module("core").constant("home",{landingPercentage:.8,navigationBarHeight:75})}(),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("faq",{url:"/faq",templateUrl:"modules/core/views/faq.client.view.html"})}]),function(){angular.module("core").controller("LandingController",["$scope",function($scope){$scope.message="VOLUNTEER",$scope.thank=function(){$scope.message="THANKS! (:"}}])}(),function(){angular.module("core").controller("NavigationController",["$scope","$location","$rootScope","smoothScroll",function($scope,$location,$rootScope,smoothScroll){$scope.scrollOrLoad=function(scrollDestId){$location.path("/#!"),angular.element(document).ready(function(){var element=document.getElementById(scrollDestId),options={offset:75};smoothScroll(element,options)})}}])}(),function(){function countdown(){return{restrict:"E",templateUrl:"/modules/core/views/partials/countdown.client.view.html",controller:CountdownController,controllerAs:"vm"}}function CountdownController($scope,$interval,$element){var timeoutId,MILL_IN_SEC=1e3,SEC_IN_DAY=86400,SEC_IN_HOUR=3600,SEC_IN_MINUTE=60,HOURS_IN_DAY=24,masqueradeBallDate=Date.UTC(2015,10,16,8,30,0);timeoutId=$interval(function(){var currentDate=Date.now(),difference=Math.abs(masqueradeBallDate-currentDate)/MILL_IN_SEC;$scope.days=Math.floor(difference/SEC_IN_DAY),difference-=$scope.days*SEC_IN_DAY,$scope.hours=Math.floor(difference/SEC_IN_HOUR)%HOURS_IN_DAY,difference-=$scope.hours*SEC_IN_HOUR,$scope.minutes=Math.floor(difference/SEC_IN_MINUTE)%SEC_IN_MINUTE,difference-=$scope.minutes*SEC_IN_MINUTE,$scope.seconds=Math.floor(difference%SEC_IN_MINUTE)},1e3),$element.on("$destroy",function(){$interval.cancel(timeoutId)})}angular.module("core").directive("mbCountdown",countdown),CountdownController.$inject=["$scope","$interval","$element"]}(),function(){function map(){var directive={restrict:"A",controller:MapController,controllerAs:"vm"};return directive}function MapController(){var museumLatLong=new google.maps.LatLng(32.732116,-117.147365),styles=[{featureType:"all",stylers:[{saturation:-70}]},{featureType:"road.highway",stylers:[{hue:"#55477c"}]}],mapOptions={center:museumLatLong,disableDefaultUI:!0,scrollwheel:!1,styles:styles,zoom:15},googleMap=new google.maps.Map(document.getElementById("map"),mapOptions),contentString="<h3>San Diego Natural History Museum</h3></br>1788 El Prado, San Diego, CA 92101",infoWindow=new google.maps.InfoWindow({content:contentString}),marker=new google.maps.Marker({icon:"http://maps.google.com/mapfiles/ms/icons/purple-dot.png",position:museumLatLong,title:"San Diego Natural History Museum"});marker.setMap(googleMap),infoWindow.open(googleMap,marker)}angular.module("core").directive("mbMap",map)}(),function(){function navScroll($window,home){function linkFunc(scope,el,attrs){var headerThreshold=$window.innerHeight*parseFloat(attrs.percentage);console.log(headerThreshold),scope.shouldHaveOverlay=!1,angular.element($window).bind("scroll",function(){this.pageYOffset>=headerThreshold?scope.shouldHaveOverlay=!0:scope.shouldHaveOverlay=!1,scope.$apply()})}var directive={restrict:"A",link:linkFunc};return directive}angular.module("core").directive("mbNavScroll",["$window","home",navScroll])}(),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);